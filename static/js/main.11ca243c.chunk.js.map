{"version":3,"sources":["assets/img/logo.svg","redux/reducers/movies.js","redux/reducers/searchText.js","redux/reducers/currentGenre.js","redux/reducers/currentMovie.js","redux/store.js","redux/actions/updateSearchText.js","components/Filter/Filter.js","components/Navigation/Navigation.js","components/MovieDetail/MovieDetail.js","redux/actions/updateCurrentMovie.js","components/Movie/Movie.js","components/MovieList/MovieList.js","redux/actions/fetchMovies.js","redux/actions/filterMovies.js","containers/App.js","index.js"],"names":["module","exports","movies","state","action","type","payload","searchText","currentGenre","currentMovie","reducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","updateSearchText","text","connect","dispatch","props","inputRef","useRef","useEffect","current","value","ref","onChange","className","placeholder","Navigation","useDispatch","to","onClick","MovieDetail","movie","useSelector","title","src","image_large","alt","year","duration","rating_code","title_episode","description_large","updateCurrentMovie","Movie","styles","backgroundImage","style","rating","description","id","MovieList","map","key","fetchMovies","filterMovies","filteredMovies","fetchData","updateMovieList","filter","toLowerCase","includes","url","fetch","then","response","json","data","groups","catch","error","console","logo","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11ca243c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7270ae87.svg\";","const movies = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_MOVIES':\r\n            return [...action.payload];\r\n        case 'FILTER_MOVIE_LIST':\r\n            return [...action.payload];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default movies;","const searchText = (state = '', action) => {\r\n    switch(action.type) {\r\n        case 'UPDATE_SEARCH_TEXT':\r\n            return state = action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default searchText;","const currentGenre = (state = 43861, action) => {\r\n    switch(action.type) {\r\n        case 'UPDATE_GENRE':\r\n            return state = action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default currentGenre;","const currentMovie = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case 'UPDATE_CURRENT_MOVIE':\r\n            return state = action.payload\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default currentMovie;","import { createStore, combineReducers } from 'redux';\r\n\r\nimport movies from './reducers/movies';\r\nimport searchText from './reducers/searchText';\r\nimport currentGenre from './reducers/currentGenre';\r\nimport currentMovie from './reducers/currentMovie';\r\n\r\nconst reducers = combineReducers({\r\n    movies,\r\n    searchText,\r\n    currentGenre,\r\n    currentMovie\r\n});\r\n\r\nconst store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","const type = 'UPDATE_SEARCH_TEXT';\r\n\r\nconst updateSearchText = text => ({type, payload: text});\r\n\r\nexport default updateSearchText;","import React, {useEffect, useRef} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport store from '../../redux/store';\r\nimport updateSearchText from '../../redux/actions/updateSearchText';\r\n\r\nimport './Filter.css';\r\n\r\nconst Filter = props => {\r\n    let inputRef = useRef();\r\n    \r\n    useEffect(() => {\r\n        inputRef.current.value = '';\r\n    }, [props.currentGenre]);\r\n    \r\n    const updateText = () => store.dispatch(updateSearchText(inputRef.current.value));\r\n\r\n    return (\r\n        <input\r\n            ref={inputRef}\r\n            onChange={updateText}\r\n            className=\"filter\"\r\n            type=\"text\"\r\n            placeholder='Buscar Películas'\r\n        />\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({currentGenre: state.currentGenre});\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport './Navigation.css';\r\n\r\nconst Navigation = props => {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <ul className=\"navbar-menu\">\r\n                <li className=\"navbar-item\">\r\n                    <Link to=\"/accion\" \r\n                          onClick={() => dispatch({type: 'UPDATE_GENRE', payload: 43861})} \r\n                          className=\"navbar-link\">\r\n                        Acción y Aventura\r\n                    </Link>\r\n                </li>\r\n                <li className=\"navbar-item\">\r\n                    <Link to=\"/scifi\" \r\n                          onClick={() => dispatch({type: 'UPDATE_GENRE', payload: 43864})} \r\n                          className=\"navbar-link\">\r\n                        Ciencia Ficción\r\n                    </Link>\r\n                </li>\r\n                <li className=\"navbar-item\">\r\n                    <Link to=\"/infantiles\" \r\n                          onClick={() => dispatch({type: 'UPDATE_GENRE', payload: 43873})} \r\n                          className=\"navbar-link\">\r\n                        Infantiles\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './MovieDetail.css';\r\n\r\nconst MovieDetail = (props) => {\r\n    const movie = useSelector(state => state.currentMovie);\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"movie-detail-title\">{movie.title}</h2>\r\n            <div className=\"movie-detail\">\r\n                <div className=\"movie-detail-image-box\">\r\n                    <img className=\"movie-detail-image\" src={movie.image_large} alt=\"movie poster\"/>\r\n                </div>\r\n                <div className=\"movie-detail-box\">\r\n                    <h4>{movie.title}</h4>\r\n                    <small className=\"movie-detail-small\">Año: {movie.year}</small>\r\n                    <small className=\"movie-detail-small\"> Duración: {movie.duration}</small>\r\n                    <small className=\"movie-detail-small\">Clasificación: {movie.rating_code}</small>\r\n                    <p className=\"movie-detail-text\">Episodio: <span>{movie.title_episode}</span></p>\r\n                    <p className=\"movie-detail-text\">{movie.description_large}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MovieDetail;","const type = 'UPDATE_CURRENT_MOVIE';\r\n\r\nconst updateCurrentMovie = movie => ({type, payload: movie});\r\n\r\nexport default updateCurrentMovie;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Movie.css';\r\n\r\nimport store from '../../redux/store';\r\nimport updateCurrentMovie from '../../redux/actions/updateCurrentMovie';\r\n\r\nconst Movie = ({movie}) => {\r\n    const styles = {\r\n        backgroundImage: `url(${movie.image_large})`,\r\n    };\r\n\r\n    const updateMovie = () => {\r\n        store.dispatch(updateCurrentMovie(movie));\r\n    }\r\n    \r\n    return (\r\n        <div className=\"movie-card\" style={styles}>\r\n            <div className=\"movie-card-info\">\r\n                <h2 className=\"movie-title\">{movie.title}</h2>\r\n                <div className=\"movie-description-container\">\r\n                    <div className=\"movie-badge-container\">\r\n                        <small className=\"movie-badge\">Año {movie.year}</small>\r\n                        <small className=\"movie-badge\">Clasificación {movie.rating}</small>\r\n                    </div>\r\n                    <p className=\"movie-description\">{movie.description}</p>\r\n                    <Link \r\n                        to={() => {return `/genre/${movie.id}`}}\r\n                        className=\"movie-button\" \r\n                        onClick={updateMovie}>\r\n                        Ver\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\n\r\nimport Movie from '../Movie/Movie';\r\n\r\nimport './MovieList.css'\r\n\r\nconst MovieList = props => (\r\n    <div className=\"movie-list\">\r\n        {props.movies.map(movie => <Movie key={movie.id} movie={movie} />)}\r\n    </div>\r\n);\r\n\r\nexport default MovieList;","const type = 'FETCH_MOVIES';\r\n\r\nconst fetchMovies = movies => ({type, payload: movies});\r\n\r\nexport default fetchMovies;","const type = 'FILTER_MOVIE_LIST';\r\n\r\nconst filterMovies = movies => ({type, payload: movies});\r\n\r\nexport default filterMovies;","import React, { useEffect, useRef } from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\n\r\nimport logo from '../assets/img/logo.svg';\r\n\r\nimport Filter from '../components/Filter/Filter';\r\nimport Navigation from '../components/Navigation/Navigation';\r\nimport MovieDetail from '../components/MovieDetail/MovieDetail';\r\nimport MovieList from '../components/MovieList/MovieList';\r\n\r\nimport fetchMovies from '../redux/actions/fetchMovies';\r\nimport filterMovies from '../redux/actions/filterMovies';\r\n\r\nimport './App.css';\r\n\r\nconst App = props => {\r\n    const dispatch = useDispatch();\r\n    \r\n    let filteredMovies = props.movies;\r\n    \r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [props.currentGenre]);\r\n\r\n    useEffect(() => {\r\n        updateMovieList();\r\n    }, [props.searchText]);\r\n\r\n    const updateMovieList = () => {\r\n        filteredMovies = props.movies.filter(movie => movie.title.toLowerCase().includes(props.searchText));\r\n        dispatch(filterMovies(filteredMovies));\r\n    }\r\n\r\n    const fetchData = () => {\r\n        const url = `https://mfwkweb-api.clarovideo.net/services/content/list?device_id=web&device_category=web&device_model=web&device_type=web&format=json&device_manufacturer=generic&authpn=webclient&authpt=tfg1h3j4k6fd7&api_version=v5.89&region=mexico&HKS=eevqocbhcj6k8bn5jdjr25mp77&quantity=40&order_way=DESC&order_id=200&level_id=GPS&from=0&node_id=${props.currentGenre}`;\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => dispatch(fetchMovies(data.response.groups)))\r\n            .catch(error => console.error(error));\r\n    }       \r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <Router>\r\n                <header className=\"app-header\">\r\n                    <Link to=\"/\">\r\n                        <img className=\"app-logo\" src={logo} alt=\"app logo\"/>\r\n                    </Link>\r\n                    <Filter/>\r\n                </header>\r\n                <Navigation/>\r\n                <main className=\"app-movies-container\">\r\n                    <Switch>\r\n                        <Route path=\"/\" exact>\r\n                            <h2 className=\"app-title\">Selecciona un género para ver películas</h2>\r\n                        </Route>\r\n                        <Route path=\"/:genre\" exact>\r\n                            <MovieList movies={filteredMovies}/>\r\n                        </Route>\r\n                        <Route path=\"/:genre/:id\" exact>\r\n                            <MovieDetail />\r\n                        </Route>\r\n                    </Switch>\r\n                </main>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    movies: state.movies,\r\n    searchText: state.searchText,\r\n    currentGenre: state.currentGenre,\r\n    currentMovie: state.currentMovie,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './containers/App';\r\n\r\nimport store from './redux/store';\r\n\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}