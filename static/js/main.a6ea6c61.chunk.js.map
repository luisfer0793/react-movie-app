{"version":3,"sources":["assets/img/logo.svg","components/Filter/Filter.js","components/Navigation/Navigation.js","components/MovieDetail/MovieDetail.js","components/Movie/Movie.js","components/MovieList/MovieList.js","containers/App.js","redux/reducers/movies.js","redux/reducers/searchText.js","redux/reducers/currentGenre.js","redux/reducers/currentMovie.js","redux/store/store.js","index.js"],"names":["module","exports","Filter","props","inputRef","useRef","dispatch","useDispatch","useSelector","state","searchText","ref","onChange","type","payload","text","current","value","className","placeholder","Navigation","to","onClick","MovieDetail","movie","currentMovie","title","src","image_large","alt","year","duration","rating_code","title_episode","description_large","Movie","styles","backgroundImage","image","style","rating","description","id","MovieList","movies","map","key","connect","currentGenre","useEffect","fetchData","updateMovieList","filteredMovies","filter","toLowerCase","includes","url","fetch","then","response","json","data","groups","catch","error","console","log","logo","path","exact","action","reducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6ea6c61.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7270ae87.svg\";","import React, { useRef, useEffect } from 'react';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\n\r\nimport './Filter.css';\r\n\r\nconst Filter = props => {\r\n    let inputRef = useRef();\r\n\r\n    const dispatch = useDispatch();\r\n    const searchText = useSelector(state => state.searchText);\r\n\r\n    const action = text => {\r\n        return ({\r\n            type: 'UPDATE_SEARCH_TEXT',\r\n            payload: {\r\n                text\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <input\r\n            ref={inputRef}\r\n            onChange={() => dispatch(action(inputRef.current.value))}\r\n            className=\"filter\"\r\n            type=\"text\"\r\n            placeholder='Buscar Películas'\r\n        />\r\n    );\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport './Navigation.css';\r\n\r\nconst Navigation = props => {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <ul className=\"navbar-menu\">\r\n                <li className=\"navbar-item\">\r\n                    <Link to=\"/accion\" \r\n                          onClick={() => dispatch({type: 'UPDATE_GENRE', payload: 43861})} \r\n                          className=\"navbar-link\">\r\n                        Acción y Aventura\r\n                    </Link>\r\n                </li>\r\n                <li className=\"navbar-item\">\r\n                    <Link to=\"/scifi\" \r\n                          onClick={() => dispatch({type: 'UPDATE_GENRE', payload: 43864})} \r\n                          className=\"navbar-link\">\r\n                        Ciencia Ficción\r\n                    </Link>\r\n                </li>\r\n                <li className=\"navbar-item\">\r\n                    <Link to=\"/infantiles\" \r\n                          onClick={() => dispatch({type: 'UPDATE_GENRE', payload: 43873})} \r\n                          className=\"navbar-link\">\r\n                        Infantiles\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './MovieDetail.css';\r\n\r\nconst MovieDetail = (props) => {\r\n    const movie = useSelector(state => state.currentMovie);\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"movie-detail-title\">{movie.title}</h2>\r\n            <div className=\"movie-detail\">\r\n                <div className=\"movie-detail-image-box\">\r\n                    <img className=\"movie-detail-image\" src={movie.image_large} alt=\"movie poster\"/>\r\n                </div>\r\n                <div className=\"movie-detail-box\">\r\n                    <h4>{movie.title}</h4>\r\n                    <small className=\"movie-detail-small\">Año: {movie.year}</small>\r\n                    <small className=\"movie-detail-small\"> Duración: {movie.duration}</small>\r\n                    <small className=\"movie-detail-small\">Clasificación: {movie.rating_code}</small>\r\n                    <p className=\"movie-detail-text\">Episodio: <span>{movie.title_episode}</span></p>\r\n                    <p className=\"movie-detail-text\">{movie.description_large}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MovieDetail;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Movie.css';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Movie = (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const styles = {\r\n        backgroundImage: `url(${props.image})`,\r\n    };\r\n\r\n    const updateMovieId = () => {\r\n        dispatch({\r\n            type: 'UPDATE_CURRENT_MOVIE',\r\n            payload: props.movie\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <div className=\"movie-card\" style={styles}>\r\n            <div className=\"movie-card-info\">\r\n                <h2 className=\"movie-title\">{props.title}</h2>\r\n                <div className=\"movie-description-container\">\r\n                    <div className=\"movie-badge-container\">\r\n                        <small className=\"movie-badge\">Año {props.year}</small>\r\n                        <small className=\"movie-badge\">Clasificación {props.rating}</small>\r\n                    </div>\r\n                    <p className=\"movie-description\">{props.description}</p>\r\n                    <Link \r\n                        to={() => {return `/genre/${props.id}`}} \r\n                        className=\"movie-button\" \r\n                        onClick={updateMovieId}>\r\n                        Ver\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\n\r\nimport Movie from '../Movie/Movie';\r\n\r\nimport './MovieList.css'\r\n\r\nconst MovieList = props => {\r\n    const movies = useSelector(state => state.movies);\r\n\r\n    const paintMovies = () => movies.map(movie => {\r\n        return (\r\n            <Movie \r\n                key={movie.id}\r\n                id={movie.id} \r\n                title={movie.title} \r\n                image={movie.image_large}\r\n                description={movie.description}\r\n                year={movie.year}\r\n                rating={movie.rating_code}\r\n                movie={movie}\r\n            />\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className=\"movie-list\">\r\n            {paintMovies()}\r\n        </div>\r\n    );\r\n}\r\nexport default MovieList;","import React, { useEffect } from 'react';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport logo from '../assets/img/logo.svg';\r\n\r\nimport Filter from '../components/Filter/Filter';\r\nimport Navigation from '../components/Navigation/Navigation';\r\nimport MovieDetail from '../components/MovieDetail/MovieDetail';\r\nimport MovieList from '../components/MovieList/MovieList';\r\n\r\n\r\nimport './App.css';\r\n\r\nconst App = props => {\r\n    const movies = useSelector(state => state.movies);\r\n    const currentGenre = useSelector(state => state.currentGenre);\r\n    const searchText = useSelector(state => state.searchText);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [currentGenre]);\r\n\r\n    useEffect(() => {\r\n        updateMovieList();\r\n    }, [searchText]);\r\n\r\n    const updateMovieList = () => {\r\n        const filteredMovies = movies.filter(movie => movie.title.toLowerCase().includes(searchText));\r\n        dispatch({\r\n            type: 'FILTER_MOVIE_LIST', payload: filteredMovies\r\n        });\r\n    }\r\n\r\n    const fetchData = () => {\r\n        const nodeId = currentGenre;\r\n        const url = `https://mfwkweb-api.clarovideo.net/services/content/list?device_id=web&device_category=web&device_model=web&device_type=web&format=json&device_manufacturer=generic&authpn=webclient&authpt=tfg1h3j4k6fd7&api_version=v5.89&region=mexico&HKS=eevqocbhcj6k8bn5jdjr25mp77&quantity=40&order_way=DESC&order_id=200&level_id=GPS&from=0&node_id=${nodeId}`;\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                dispatch({\r\n                    type: 'FETCH_MOVIES', payload: data.response.groups\r\n                })   \r\n            })\r\n            .catch(error => console.log(error));\r\n    }       \r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <header className=\"app-header\">\r\n                <img className=\"app-logo\" src={logo} alt=\"app logo\"/>\r\n                <Filter/>\r\n            </header>\r\n            <Router>\r\n                <Navigation/>\r\n                <div className=\"app-movies-container\">\r\n                    <Switch>\r\n                        <Route path=\"/:genre\" exact>\r\n                            <MovieList/>\r\n                        </Route>\r\n                        <Route path=\"/:genre/:id\" exact>\r\n                            <MovieDetail/>\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        movies: state.movies,\r\n        searchText: state.searchText,\r\n        currentGenre: state.currentGenre,\r\n        currentMovie: state.currentMovie,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);","const movies = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_MOVIES':\r\n            return state = action.payload;\r\n        case 'FILTER_MOVIE_LIST':\r\n            return state = action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default movies;","const searchText = (state = '', action) => {\r\n    switch(action.type) {\r\n        case 'UPDATE_SEARCH_TEXT':\r\n            return state = action.payload.text;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default searchText;","const currentGenre = (state = 43861, action) => {\r\n    switch(action.type) {\r\n        case 'UPDATE_GENRE':\r\n            return state = action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default currentGenre;","const currentMovie = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case 'UPDATE_CURRENT_MOVIE':\r\n            return state = action.payload\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default currentMovie;","import { createStore, combineReducers } from 'redux';\r\n\r\nimport movies from '../reducers/movies';\r\nimport searchText from '../reducers/searchText';\r\nimport currentGenre from '../reducers/currentGenre';\r\nimport currentMovie from '../reducers/currentMovie';\r\n\r\nconst reducers = combineReducers({\r\n    movies,\r\n    searchText,\r\n    currentGenre,\r\n    currentMovie\r\n});\r\n\r\nconst store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './containers/App';\r\n\r\nimport store from './redux/store/store';\r\n\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}